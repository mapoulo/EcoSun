package notification.service.project;


import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.Bean;
import org.springframework.kafka.annotation.KafkaListener;
import org.springframework.kafka.support.mapping.DefaultJackson2JavaTypeMapper;
import org.springframework.kafka.support.mapping.Jackson2JavaTypeMapper;
import org.springframework.kafka.support.serializer.JsonDeserializer;

import lombok.extern.slf4j.Slf4j;

@SpringBootApplication
@Slf4j
public class NotificationServiceApplication {

	public static void main(String[] args) {
		SpringApplication.run(NotificationServiceApplication.class, args);
	}
	
	
	@Bean
	public JsonDeserializer<OrderEvent> jsonDeserializer() {
	    Jackson2JavaTypeMapper javaTypeMapper = new DefaultJackson2JavaTypeMapper();
	    javaTypeMapper.addTrustedPackages("order.DTO");

	    JsonDeserializer<OrderEvent> jsonDeserializer = new JsonDeserializer<>(OrderEvent.class);
	    jsonDeserializer.setTypeMapper(javaTypeMapper);

	    return jsonDeserializer;
	}

	

	@KafkaListener(topics = "testTopic12", groupId = "notificationId")
	public void handleNotification(OrderEvent orderEvent) {
		log.info("Received notification for order "+ orderEvent);
	
	}
	
	

}
